{"version":3,"sources":["components/navbar.jsx","services/weatherService.js","store/foreacast/forecastTypes.js","store/foreacast/forecastAction.js","components/search.jsx","components/helpers.js","components/dayItem.jsx","components/currentDayItem.jsx","store/favorites/favoritesTypes.js","components/favoriteButton.jsx","store/favorites/favoritesAction.js","components/home.jsx","components/favoriteItem.jsx","components/favorites.jsx","App.js","store/foreacast/forecastReducer.js","store/favorites/favoritesReducer.js","store/store.js","index.js"],"names":["Navbar","className","to","type","id","axios","defaults","baseURL","interceptors","response","use","error","toast","configure","status","Promise","reject","apikey","locationAutocomplete","q","get","weatherService","getCurrentWeather","key","get5DaysForecast","GET_CURRENT_WEATHER","GET_5_DAYS_FORECAST","SET_CITY_ID","SET_CITY_NAME","TOGGLE_DEGREE_TYPE","setCityName","cityName","dispatch","a","payload","err","console","log","setCityId","cityId","cityKey","data","DailyForecasts","connect","useState","userInput","setUserInput","setData","useEffect","fetchData","length","value","onChange","e","target","test","replace","placeholder","splice","map","item","onClick","Key","LocalizedName","onClickSelectCity","helpers","setIconId","iconId","icon","isTwoDigits","toString","DayItem","degreeType","Day","Icon","src","alt","date","Date","split","renderDay","celsius","fahrenheit","state","forecast","currentWeather","Temperature","Metric","Value","Imperial","WeatherIcon","style","width","height","ADD_CITY_TO_FAVORITE","REMOVE_CITY_FROM_FAVORITE","favoriteList","favorites","addCityToFavorite","cityData","removeCityFromFavorite","isFavorite","setIsFavorite","filter","WeatherText","fiveDaysForecast","toggleDegreeType","bothApi","index","weatherText","history","weatherIcon","App","Fragment","exact","path","component","Home","render","props","getFullYear","intialState","forecastReducer","action","Maximum","favoritesReducer","city","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","subscribe","serializedState","JSON","stringify","localStorage","setItem","saveState","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b85726e.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light shadow-sm mb-4\">\n      <div className=\"container\">\n        <Link className=\"nav-item nav-link\" to=\"/\">\n          Herolo Weather App\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"float-right\">\n          <div className=\"collapse navbar-collapse \" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-item nav-link ml-5\" to=\"/\">\n                  Home\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-item nav-link ml-5\" to=\"/favorites\">\n                  Favorites\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\nexport default Navbar;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = \"http://dataservice.accuweather.com\";\n\n//this will catch all responses with reject.\naxios.interceptors.response.use(null, (error) => {\n  toast.configure();\n  const expectedError = error.response && error.response.status >= 403;\n  if (expectedError) toast.error(\"An unexpected error occurrred.\");\n  return Promise.reject(error);\n});\n\nconst apikey = \"pRtGG5DvSKEjFjmvBj7GAIBa0Ze3EcMw\";\n//pRtGG5DvSKEjFjmvBj7GAIBa0Ze3EcMw\n//KQweRkDR2YCHe1IDtsLQQbvhNdIt4mih\n//5IrGIcM0N6wJOcSJ9pQGENFnMEZi2ytW\n//9q5ck7fLGkuaeRDQGL9ANZGPAowGBnk7\n\nexport function locationAutocomplete(q) {\n  return axios.get(\n    `/locations/v1/cities/autocomplete?apikey=${apikey}&q=${q}&language=en`\n  );\n}\n\nexport function getCurrentWeather(key) {\n  return axios.get(\n    `/currentconditions/v1/${key}?apikey=${apikey}&language=en&details=false`\n  );\n}\n\nexport function get5DaysForecast(key) {\n  return axios.get(\n    `/forecasts/v1/daily/5day/${key}?apikey=${apikey}&language=en&details=false&metric=true`\n  );\n}\n\nconst weatherService = {\n  locationAutocomplete,\n  getCurrentWeather,\n  get5DaysForecast,\n};\n\nexport default weatherService;\n","export const GET_CURRENT_WEATHER = \"GET_CURRENT_WEATHER\";\nexport const GET_5_DAYS_FORECAST = \"GET_5_DAYS_FORECAST\";\nexport const SET_CITY_ID = \"SET_CITY_ID\";\nexport const SET_CITY_NAME = \"SET_CITY_NAME\";\nexport const TOGGLE_DEGREE_TYPE = \"TOGGLE_DEGREE_TYPE\";\n","import weatherService from \"../../services/weatherService\";\n\nimport {\n  GET_CURRENT_WEATHER,\n  GET_5_DAYS_FORECAST,\n  SET_CITY_NAME,\n  SET_CITY_ID,\n  TOGGLE_DEGREE_TYPE,\n} from \"./forecastTypes\";\n\nexport const setCityName = (cityName) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_CITY_NAME,\n      payload: cityName,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setCityId = (cityId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_CITY_ID,\n      payload: cityId,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getCurrentWeather = (cityKey) => async (dispatch) => {\n  try {\n    const { data } = await weatherService.getCurrentWeather(cityKey);\n    dispatch({\n      type: GET_CURRENT_WEATHER,\n      payload: data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const get5DaysForecast = (cityKey) => async (dispatch) => {\n  try {\n    const { data } = await weatherService.get5DaysForecast(cityKey);\n\n    dispatch({\n      type: GET_5_DAYS_FORECAST,\n      payload: data.DailyForecasts,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const toggleDegreeType = () => (dispatch) => {\n  dispatch({\n    type: TOGGLE_DEGREE_TYPE,\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { locationAutocomplete } from \"../services/weatherService\";\nimport { toast } from \"react-toastify\";\n\nimport { connect } from \"react-redux\";\nimport {\n  setCityId,\n  setCityName,\n  getCurrentWeather,\n  get5DaysForecast,\n} from \"../store/foreacast/forecastAction\";\n\nconst Search = ({\n  setCityId,\n  setCityName,\n  get5DaysForecast,\n  getCurrentWeather,\n}) => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const handleOnChangeInput = (e) => {\n    toast.configure();\n    const regex = /[^A-Za-z]/gi;\n    let value = e.target.value;\n    if (regex.test(value)) {\n      toast(\"Endlish latters only.\");\n    }\n    value = value.replace(/[^A-Za-z]/gi, \"\");\n\n    setUserInput(value);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const payload = await locationAutocomplete(userInput);\n      setData(payload.data);\n    };\n    if (userInput.length > 0) {\n      fetchData();\n    } else {\n      setUserInput(\"\");\n    }\n  }, [userInput]);\n\n  const onClickSelectCity = (item) => {\n    toast(\"city selected\");\n    getCurrentWeather(item.Key);\n    get5DaysForecast(item.Key);\n    setCityName(item.LocalizedName);\n    setCityId(item.Key);\n\n    setUserInput(\"\");\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex\">\n        <input\n          value={userInput}\n          onChange={handleOnChangeInput}\n          className=\"form-control \"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n      </div>\n      <ul className=\"list-group ul-list-group\">\n        {userInput.length > 0 &&\n          data &&\n          data.splice(0, 4).map((item) => (\n            <li\n              className=\"list-group-item\"\n              key={item.Key}\n              onClick={() => onClickSelectCity(item)}\n            >\n              {item.LocalizedName}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(null, {\n  setCityId,\n  setCityName,\n  get5DaysForecast,\n  getCurrentWeather,\n})(Search);\n","const setIconId = (iconId) => {\n  let icon = iconId;\n  const reg = /[0-9]{2}/;\n  const isTwoDigits = reg.test(iconId);\n  toString(iconId);\n  if (!isTwoDigits) {\n    icon = \"0\" + iconId;\n  }\n  return icon;\n};\n\nconst helpers = {\n  setIconId,\n};\nexport default helpers;\n","import React, { useEffect, useState } from \"react\";\nimport helpers from \"./helpers\";\nimport \"./styles/dailyItem.css\";\n\nconst DayItem = ({ item, degreeType }) => {\n  const [iconId, setIconId] = useState(null);\n\n  useEffect(() => {\n    // to able to get the icons I need to add 0 when the number is single (example 1 -> 01)\n    let icon = item.Day.Icon;\n    icon = helpers.setIconId(icon);\n    setIconId(icon);\n  }, [item.Day.Icon, iconId]);\n\n  const renderDay = () => {\n    const date = item.Date;\n    const day = new Date(date).toString();\n    return day.split(\" \")[0];\n  };\n\n  return (\n    iconId && (\n      <div className=\"col-md-2 col-sm-4 mr-2\">\n        <div className=\"card card-daily\">\n          <span className=\"icon\">\n            <img\n              className=\"img-fluid\"\n              src={`https://developer.accuweather.com/sites/default/files/${iconId}-s.png`}\n              alt=\"weatherImage\"\n            />\n          </span>\n          <div className=\"title\">\n            <p>{renderDay()}</p>\n          </div>\n          <div className=\"temp\">\n            {degreeType ? item.celsius : item.fahrenheit}\n            <sup>&deg;</sup>\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default DayItem;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers\";\nimport \"./styles/currentDayItem.css\";\n\nconst CurrentDayItem = ({\n  cityName,\n  WeatherIcon,\n  degreeType,\n  celsius,\n  fahrenheit,\n}) => {\n  const [iconId, setIconId] = useState(null);\n\n  useEffect(() => {\n    // to able to get the icons I need to add 0 when the number is single (example 1 -> 01)\n    let icon = WeatherIcon;\n    icon = helpers.setIconId(icon);\n    setIconId(icon);\n  }, [WeatherIcon]);\n\n  return (\n    celsius && (\n      <div className=\"d-flex\">\n        <div className=\" mb-3\" style={{ width: \"150px\", height: \"85px\" }}>\n          <img\n            id=\"current-weather-icon\"\n            className=\"img-fluid\"\n            style={{ width: \"50\" }}\n            src={`https://developer.accuweather.com/sites/default/files/${iconId}-s.png`}\n            alt=\"weatherImage\"\n          />\n        </div>\n        <div className=\"ml-2 mt-3\">\n          <p className=\"card-title\">{cityName}</p>\n          <p className=\"card-text\">\n            {degreeType ? celsius : fahrenheit} &#8451;\n          </p>\n        </div>\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cityName: state.forecast.cityName,\n  degreeType: state.forecast.degreeType,\n  celsius: state.forecast.currentWeather[0].Temperature.Metric.Value,\n  fahrenheit: state.forecast.currentWeather[0].Temperature.Imperial.Value,\n  WeatherIcon: state.forecast.currentWeather[0].WeatherIcon,\n});\n\nexport default connect(mapStateToProps, {})(CurrentDayItem);\n","export const ADD_CITY_TO_FAVORITE = \"ADD_CITY_TO_FAVORITE\";\nexport const REMOVE_CITY_FROM_FAVORITE = \"REMOVE_CITY_FROM_FAVORITE\";\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addCityToFavorite,\n  removeCityFromFavorite,\n} from \"../store/favorites/favoritesAction\";\n\nconst FavoriteButton = ({\n  addCityToFavorite,\n  removeCityFromFavorite,\n  cityId,\n  cityName,\n  currentWeather,\n  favoriteList,\n}) => {\n  const [isFavorite, setIsFavorite] = useState(null);\n\n  useEffect(() => {\n    const isCityExists = () =>\n      favoriteList.filter((item) => item.cityId === cityId).length !== 0; // if length is equal to zero - will return false.\n\n    setIsFavorite(isCityExists());\n  }, [cityId, favoriteList]);\n\n  const handelAddToFavorite = () => {\n    if (isFavorite) {\n      removeCityFromFavorite(cityId);\n    } else {\n      const { WeatherText, WeatherIcon } = currentWeather[0];\n      const celsius = currentWeather[0].Temperature.Metric.Value;\n      const fahrenheit = currentWeather[0].Temperature.Imperial.Value;\n\n      addCityToFavorite({\n        cityId,\n        cityName,\n        WeatherText,\n        celsius,\n        fahrenheit,\n        WeatherIcon,\n      });\n    }\n  };\n\n  return (\n    <>\n      <button\n        className=\"favorite-btn\"\n        onClick={handelAddToFavorite}\n        className={\"btn \" + (isFavorite ? \"btn-danger\" : \"btn-secondary\")}\n      >\n        <i className=\"fas fa-heart mr-2\"></i>\n        {isFavorite ? \"Remove From Favorites\" : \"Add To Favorites\"}\n      </button>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentWeather: state.forecast.currentWeather,\n  cityName: state.forecast.cityName,\n  cityId: state.forecast.cityId,\n  favoriteList: state.favorites.favoriteList,\n});\n\nexport default connect(mapStateToProps, {\n  addCityToFavorite,\n  removeCityFromFavorite,\n})(FavoriteButton);\n","import {\n  ADD_CITY_TO_FAVORITE,\n  REMOVE_CITY_FROM_FAVORITE,\n} from \"./favoritesTypes\";\n\nexport const addCityToFavorite = (cityData) => (dispatch) => {\n  dispatch({\n    type: ADD_CITY_TO_FAVORITE,\n    payload: cityData,\n  });\n};\n\nexport const removeCityFromFavorite = (cityId) => (dispatch) => {\n  dispatch({\n    type: REMOVE_CITY_FROM_FAVORITE,\n    payload: cityId,\n  });\n};\n","import React, { useEffect } from \"react\";\nimport Search from \"./search\";\nimport DayItem from \"./dayItem\";\nimport CurrentDayItem from \"./currentDayItem\";\nimport FavoriteButton from \"./favoriteButton\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getCurrentWeather,\n  get5DaysForecast,\n  toggleDegreeType,\n} from \"../store/foreacast/forecastAction\";\n\nconst Home = ({\n  cityId,\n  currentWeather,\n  fiveDaysForecast,\n  get5DaysForecast,\n  getCurrentWeather,\n  toggleDegreeType,\n  degreeType,\n}) => {\n  useEffect(() => {\n    bothApi();\n  }, []);\n\n  const bothApi = () => {\n    getCurrentWeather(cityId);\n    get5DaysForecast(cityId);\n  };\n\n  const onDegreeTypeToggle = () => {\n    toggleDegreeType();\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row search\">\n          <div className=\"col-md-6 mx-auto\">\n            <Search />\n          </div>\n        </div>\n        <div className=\"row justify-content-center mt-2\">\n          <div className=\"col-2 \">\n            <button className=\"btn btn-dark\" onClick={onDegreeTypeToggle}>\n              switch C / F\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-3\">\n            <div\n              id=\"weather-window\"\n              className=\"card\"\n              style={{ height: \"580px\" }}\n            >\n              {currentWeather.length > 0 && (\n                <>\n                  <div className=\"p-3 d-flex\">\n                    <span className=\"mr-auto p-2\">\n                      <CurrentDayItem />\n                    </span>\n                    <span className=\"float-right\">\n                      <FavoriteButton />\n                    </span>\n                  </div>\n\n                  <div className=\"card-body mb-4\">\n                    <h4 className=\"card-title text-center\">\n                      {currentWeather[0].WeatherText}\n                    </h4>\n                  </div>\n                </>\n              )}\n\n              <div className=\"container\">\n                <div className=\"row d-flex justify-content-center mb-3\">\n                  {fiveDaysForecast.length > 0 &&\n                    fiveDaysForecast.map((item, index) => (\n                      <DayItem\n                        key={index}\n                        item={item}\n                        degreeType={degreeType}\n                      />\n                    ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  currentWeather: state.forecast.currentWeather,\n  fiveDaysForecast: state.forecast.fiveDaysForecast,\n  cityId: state.forecast.cityId,\n  degreeType: state.forecast.degreeType,\n});\n\nexport default connect(mapStateToProps, {\n  get5DaysForecast,\n  getCurrentWeather,\n  toggleDegreeType,\n})(Home);\n","import React, { useEffect, useState } from \"react\";\nimport { setCityId, setCityName } from \"../store/foreacast/forecastAction\";\nimport { connect } from \"react-redux\";\nimport \"./styles/favoriteItem.css\";\nimport helpers from \"./helpers\";\n\nimport { getCurrentWeather } from \"../store/foreacast/forecastAction\";\n\nconst FavoriteItem = ({\n  cityId,\n  cityName,\n  fahrenheit,\n  celsius,\n  degreeType,\n  weatherText,\n  history,\n  setCityId,\n  setCityName,\n  weatherIcon,\n}) => {\n  const [iconId, setIconId] = useState(\"\");\n\n  useEffect(() => {\n    let icon = weatherIcon;\n    icon = helpers.setIconId(icon);\n    setIconId(icon);\n  }, [weatherIcon]);\n\n  const onFavoriteClick = () => {\n    setCityId(cityId);\n    setCityName(cityName);\n    history.replace(\"/\");\n  };\n  return (\n    <div className=\"col-sm-6 col-md-3 col-lg-2 m-3\">\n      <div className=\"card card-favorite\" onClick={onFavoriteClick}>\n        <span className=\"icon\">\n          <img\n            className=\"img-fluid\"\n            src={`https://developer.accuweather.com/sites/default/files/${iconId}-s.png`}\n            alt=\"weatherImage\"\n          />\n        </span>\n        <div className=\"title\">\n          <p>{cityName}</p>\n        </div>\n        <div className=\"row\">\n          <div className=\" mx-auto\">\n            <div className=\"header\">{weatherText}</div>\n          </div>\n        </div>\n        <div className=\"temp\">\n          {degreeType ? celsius : fahrenheit}\n          <sup>&deg;</sup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, {\n  setCityId,\n  setCityName,\n  getCurrentWeather,\n})(FavoriteItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FavoriteItem from \"./favoriteItem\";\n\nconst Favorites = ({ favoriteList, history, degreeType }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h1>Favorite Cities</h1>\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          {favoriteList.map((item) => (\n            <FavoriteItem\n              key={item.cityId}\n              cityName={item.cityName}\n              cityId={item.cityId}\n              celsius={item.celsius}\n              degreeType={degreeType}\n              fahrenheit={item.fahrenheit}\n              weatherText={item.WeatherText}\n              weatherIcon={item.WeatherIcon}\n              history={history}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  favoriteList: state.favorites.favoriteList,\n  degreeType: state.forecast.degreeType,\n});\n\nexport default connect(mapStateToProps, {})(Favorites);\n","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Home from \"./components/home\";\nimport Favorites from \"./components/favorites\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <header>\n        <Navbar />\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            exact\n            path=\"/favorites\"\n            render={(props) => <Favorites {...props} />}\n          />\n        </Switch>\n      </main>\n      <footer>\n        <p className=\"border-top pt-3  text-center \">\n          Herolo Weather © {new Date().getFullYear()}\n        </p>\n      </footer>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import {\n  GET_CURRENT_WEATHER,\n  GET_5_DAYS_FORECAST,\n  SET_CITY_ID,\n  SET_CITY_NAME,\n  TOGGLE_DEGREE_TYPE,\n} from \"./forecastTypes\";\n\nconst intialState = {\n  fiveDaysForecast: [],\n  currentWeather: [],\n  degreeType: true, //false -> fahrenheit, true -> celsius\n  cityId: \"215854\",\n  cityName: \"Tel Aviv\",\n};\n\nconst forecastReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case GET_CURRENT_WEATHER:\n      return {\n        ...state,\n        currentWeather: action.payload,\n      };\n    case GET_5_DAYS_FORECAST:\n      return {\n        ...state,\n        fiveDaysForecast: action.payload.map((item) => {\n          const celsius = item.Temperature.Maximum.Value;\n          return { ...item, celsius, fahrenheit: (celsius * 9) / 5 + 32 };\n        }),\n      };\n    case TOGGLE_DEGREE_TYPE:\n      return {\n        ...state,\n        degreeType: !state.degreeType,\n      };\n    case SET_CITY_ID:\n      return {\n        ...state,\n        cityId: action.payload,\n      };\n    case SET_CITY_NAME:\n      return {\n        ...state,\n        cityName: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default forecastReducer;\n","import {\n  ADD_CITY_TO_FAVORITE,\n  REMOVE_CITY_FROM_FAVORITE,\n} from \"./favoritesTypes\";\n\nconst intialState = {\n  favoriteList: [],\n};\n\nconst favoritesReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case ADD_CITY_TO_FAVORITE:\n      return {\n        ...state,\n        favoriteList: [action.payload, ...state.favoriteList],\n      };\n    case REMOVE_CITY_FROM_FAVORITE:\n      return {\n        ...state,\n        favoriteList: state.favoriteList.filter(\n          (city) => city.cityId !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default favoritesReducer;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport forecastReducer from \"./foreacast/forecastReducer\";\nimport favoritesReducer from \"./favorites/favoritesReducer\";\n\nconst composeEnhancers = composeWithDevTools({});\n\nconst rootReducer = combineReducers({\n  forecast: forecastReducer,\n  favorites: favoritesReducer,\n});\n\nconst saveState = (state) => {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem(\"state\", serializedState);\n};\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"popper.js/dist/popper\";\nimport \"jquery/dist/jquery\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n      <Provider store={store}>\n          <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}